import logging
import requests
import pandas as pd

# Configure logging
logging.basicConfig(level=logging.DEBUG, format='%(asctime)s - %(levelname)s - %(message)s')

def fetch_data(api_url, headers):
    response = requests.get(api_url, headers=headers)
    if response.status_code == 200:
        return response.json()
    else:
        logging.error(f"Failed to fetch data from API. Status code: {response.status_code}")
        return None

def get_all_data(api_url, headers):
    all_data = []
    api_calls = 0  # Initialize counter for API calls
    while True:  # Continue looping until there are no more records
        response = requests.get(api_url, headers=headers)
        api_calls += 1  # Increment API call counter
        if response.status_code == 200:
            data = response.json()
            all_data.extend(data)
            if 'next' in response.links:
                next_url = response.links['next']['url']
                api_url = next_url
            else:
                logging.info("No more records to retrieve. Stopping pagination.")
                break  # Exit the loop if there are no more pages
        else:
            logging.error(f"Failed to fetch data from API. Status code: {response.status_code}")
            break  # Exit the loop if the API request fails
    logging.info(f"API called {api_calls} times")  # Log API call count
    return all_data


def main():
    # Define API URL and bearer token
    api_url = "https://usflearn.instructure.com/api/v1/courses/1857108/enrollments"
    bearer_token = "13~lPlsn4ULV17CiebUIW5uIA1QoR4bcBJnMOFHU3wagAleGhkCQ3N7XM0ubPMIK4LT"

    # Define headers with bearer token authentication
    headers = {"Authorization": f"Bearer {bearer_token}"}

    # Fetch all data from the API
    all_data = get_all_data(api_url, headers)

    # Convert data to DataFrame
    if all_data:
        df = pd.DataFrame(all_data)
        logging.info("Data fetched successfully and saved to DataFrame.")

        # Save DataFrame to Excel file
        file_path = r"C:\Users\nalla\Downloads\Mohan\data1.xlsx"
        df.to_excel(file_path, index=False)  # Index=False to exclude row numbers

        logging.info(f"Data saved to '{file_path}'.")
        print(df.head())  # Display the first few rows of the DataFrame
    else:
        logging.warning("No data fetched from the API.")

if __name__ == "__main__":
    main()
